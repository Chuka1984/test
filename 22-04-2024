Update and upgrade your Operating System is always recommended as first step: sudo apt update && sudo apt -y upgrade to prevent any risk with outdated packages when building your webserver stack.

Example #1 – Simple HTML site

# Webinoly NGINX Installation
wget -qO weby qrok.es/wy && sudo bash weby -nginx

# Create your site
sudo site example.com -html

# Add an SSL Cert
sudo site example.com -ssl=on

# Enable www-data user to upload and modify files via SFTP.
sudo webinoly -login-www-data=on
Example #2 – Any PHP site

# Webinoly NGINX and PHP Installation
wget -qO weby qrok.es/wy && sudo bash weby -php

# Create site
sudo site example.com -php

# SSL Certificate (HTTPS) for your site
sudo site example.com -ssl=on

# Enable www-data user to upload and modify files via SFTP.
sudo webinoly -login-www-data=on
Example #3 – WordPress site

# Webinoly LEMP Installation
wget -qO weby qrok.es/wy && sudo bash weby

# Create a WordPress site with FastCGI Cache
sudo site example.com -wp -cache=on

# SSL Certificate (HTTPS) for your site
sudo site example.com -ssl=on

# Visit https://example.com and finish WP setup
# Webinoly protects WP login pages (wp-admin / wp-login), we need to create a user for HTTP Authentication.
sudo httpauth -add

# Enable www-data user to upload and modify files via SFTP.
sudo webinoly -login-www-data=on
Example #4 – Nginx in front of your (Java, Vue, React, Node, Angular, etc) app/site

# Webinoly NGINX Installation
wget -qO weby qrok.es/wy && sudo bash weby -nginx

# Create a Reverse Proxy site (Point your domain to your app)
sudo site example.com -proxy=[localhost:8082]

# Add an SSL Cert
sudo site example.com -ssl=on -root-path=/opt/app/web
Example #5 – Custom Configuration

# Webinoly Clean Installation
wget -qO weby qrok.es/wy && sudo bash weby -clean

# Change PHP version
sudo stack -php-ver=7.4

# Timezone
sudo webinoly -timezone

# Change any conf you want before building the stack
# Change Nginx branch to mainline
# Set MySQL as default instead of MariaDB.
# Change MariaDB version.
# Etc...
sudo nano /opt/webinoly/webinoly.conf

# Now build the stack using your Custom Configuration
# Here we're using the 'light' option to not install additional tools (only core packages)
# Let's Encrypt, Backups, Postfix, Redis, Memcached, phpMyAdmin, etc, will NOT be installed.
# Also, you can use the 'basic' option, or install individual tools according to your needs.
sudo stack -lemp -build=light

# Create a site
sudo site example.com -php
